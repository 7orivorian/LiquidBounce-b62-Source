// 
// Decompiled by Procyon v0.5.36
// 

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import net.minecraft.block.Block;
import net.ccbluex.liquidbounce.event.events.PushOutEvent;
import net.minecraft.util.MathHelper;
import net.ccbluex.liquidbounce.event.events.PacketEvent;
import net.minecraft.util.AxisAlignedBB;
import net.ccbluex.liquidbounce.event.events.BlockBBEvent;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.minecraft.client.network.NetHandlerPlayClient;
import net.minecraft.util.BlockPos;
import net.ccbluex.liquidbounce.utils.MovementUtils;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.ccbluex.liquidbounce.utils.block.BlockUtils;
import net.minecraft.block.BlockAir;
import net.ccbluex.liquidbounce.event.events.UpdateEvent;
import joptsimple.internal.Strings;
import net.minecraft.client.audio.ISound;
import net.minecraft.client.audio.PositionedSoundRecord;
import net.minecraft.util.ResourceLocation;
import net.ccbluex.liquidbounce.features.command.Command;
import net.ccbluex.liquidbounce.LiquidBounce;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;
import net.ccbluex.liquidbounce.valuesystem.types.ListValue;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.features.module.Module;

@ModuleInfo(name = "Phase", description = "Allows you to walk through blocks.", category = ModuleCategory.EXPLOIT)
public class Phase extends Module
{
    private final ListValue modeValue;
    private final TickTimer tickTimer;
    private boolean mineplexClip;
    private TickTimer mineplexTickTimer;
    
    public Phase() {
        this.modeValue = new ListValue("Mode", new String[] { "Vanilla", "Skip", "Spartan", "Clip", "AAC3.5.0", "Mineplex" }, "Vanilla");
        this.tickTimer = new TickTimer();
        this.mineplexTickTimer = new TickTimer();
        LiquidBounce.CLIENT.commandManager.registerCommand(new Command("phase", null) {
            @Override
            public void execute(final String[] args) {
                if (args.length <= 1 || !args[1].equalsIgnoreCase("mode")) {
                    this.chatSyntax(".phase <mode>");
                    return;
                }
                if (args.length > 2 && Phase.this.modeValue.contains(args[2])) {
                    Phase.this.modeValue.setValue(args[2].toLowerCase());
                    this.chat("§7Phase mode was set to §8" + Phase.this.modeValue.asString().toUpperCase() + "§7.");
                    Phase$1.mc.func_147118_V().func_147682_a((ISound)PositionedSoundRecord.func_147674_a(new ResourceLocation("random.anvil_use"), 1.0f));
                    return;
                }
                this.chatSyntax(".phase mode §c<§8" + Strings.join(Phase.this.modeValue.getValues(), "§7, §8") + "§c>");
            }
        });
    }
    
    @EventTarget
    public void onUpdate(final UpdateEvent event) {
        final boolean isInsideBlock = BlockUtils.collideBlockIntersects(Phase.mc.field_71439_g.func_174813_aQ(), block -> !(block instanceof BlockAir));
        if (isInsideBlock && !this.modeValue.asString().equalsIgnoreCase("Mineplex")) {
            Phase.mc.field_71439_g.field_70145_X = true;
            Phase.mc.field_71439_g.field_70181_x = 0.0;
            Phase.mc.field_71439_g.field_70122_E = true;
        }
        final NetHandlerPlayClient netHandlerPlayClient = Phase.mc.func_147114_u();
        final String lowerCase = this.modeValue.asString().toLowerCase();
        switch (lowerCase) {
            case "vanilla": {
                if (!Phase.mc.field_71439_g.field_70122_E || !this.tickTimer.hasTimePassed(2) || !Phase.mc.field_71439_g.field_70123_F) {
                    break;
                }
                if (isInsideBlock && !Phase.mc.field_71439_g.func_70093_af()) {
                    break;
                }
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(0.5, 0.0, 0.5, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u + 0.2, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(0.5, 0.0, 0.5, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t + 0.5, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + 0.5, true));
                final double yaw = Math.toRadians(Phase.mc.field_71439_g.field_70177_z);
                final double x = -Math.sin(yaw) * 0.04;
                final double z = Math.cos(yaw) * 0.04;
                Phase.mc.field_71439_g.func_70107_b(Phase.mc.field_71439_g.field_70165_t + x, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + z);
                this.tickTimer.reset();
                break;
            }
            case "skip": {
                if (!Phase.mc.field_71439_g.field_70122_E || !this.tickTimer.hasTimePassed(2) || !Phase.mc.field_71439_g.field_70123_F) {
                    break;
                }
                if (isInsideBlock && !Phase.mc.field_71439_g.func_70093_af()) {
                    break;
                }
                final double direction = MovementUtils.getDirection();
                final double posX = -Math.sin(direction) * 0.3;
                final double posZ = Math.cos(direction) * 0.3;
                for (int i = 0; i < 3; ++i) {
                    Phase.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u + 0.06, Phase.mc.field_71439_g.field_70161_v, true));
                    Phase.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t + posX * i, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + posZ * i, true));
                }
                Phase.mc.field_71439_g.func_174826_a(Phase.mc.field_71439_g.func_174813_aQ().func_72317_d(posX, 0.0, posZ));
                Phase.mc.field_71439_g.func_70634_a(Phase.mc.field_71439_g.field_70165_t + posX, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + posZ);
                this.tickTimer.reset();
                break;
            }
            case "spartan": {
                if (!Phase.mc.field_71439_g.field_70122_E || !this.tickTimer.hasTimePassed(2) || !Phase.mc.field_71439_g.field_70123_F) {
                    break;
                }
                if (isInsideBlock && !Phase.mc.field_71439_g.func_70093_af()) {
                    break;
                }
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(0.5, 0.0, 0.5, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t, Phase.mc.field_71439_g.field_70163_u - 0.2, Phase.mc.field_71439_g.field_70161_v, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(0.5, 0.0, 0.5, true));
                netHandlerPlayClient.func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(Phase.mc.field_71439_g.field_70165_t + 0.5, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + 0.5, true));
                final double yaw = Math.toRadians(Phase.mc.field_71439_g.field_70177_z);
                final double x = -Math.sin(yaw) * 0.04;
                final double z = Math.cos(yaw) * 0.04;
                Phase.mc.field_71439_g.func_70107_b(Phase.mc.field_71439_g.field_70165_t + x, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + z);
                this.tickTimer.reset();
                break;
            }
            case "clip": {
                if (!this.tickTimer.hasTimePassed(2) || !Phase.mc.field_71439_g.field_70123_F) {
                    break;
                }
                if (isInsideBlock && !Phase.mc.field_71439_g.func_70093_af()) {
                    break;
                }
                final double yaw = Math.toRadians(Phase.mc.field_71439_g.field_70177_z);
                final double oldX = Phase.mc.field_71439_g.field_70165_t;
                final double oldZ = Phase.mc.field_71439_g.field_70161_v;
                for (int i = 1; i <= 10; ++i) {
                    final double x2 = -Math.sin(yaw) * i;
                    final double z2 = Math.cos(yaw) * i;
                    if (BlockUtils.getBlock(new BlockPos(oldX + x2, Phase.mc.field_71439_g.field_70163_u, oldZ + z2)) instanceof BlockAir && BlockUtils.getBlock(new BlockPos(oldX + x2, Phase.mc.field_71439_g.field_70163_u + 1.0, oldZ + z2)) instanceof BlockAir) {
                        Phase.mc.field_71439_g.func_70107_b(oldX + x2, Phase.mc.field_71439_g.field_70163_u, oldZ + z2);
                        break;
                    }
                }
                this.tickTimer.reset();
                break;
            }
            case "aac3.5.0": {
                if (!this.tickTimer.hasTimePassed(2) || !Phase.mc.field_71439_g.field_70123_F) {
                    break;
                }
                if (isInsideBlock && !Phase.mc.field_71439_g.func_70093_af()) {
                    break;
                }
                final double yaw = Math.toRadians(Phase.mc.field_71439_g.field_70177_z);
                final double oldX = Phase.mc.field_71439_g.field_70165_t;
                final double oldZ = Phase.mc.field_71439_g.field_70161_v;
                final double x3 = -Math.sin(yaw);
                final double z3 = Math.cos(yaw);
                Phase.mc.field_71439_g.func_70107_b(oldX + x3, Phase.mc.field_71439_g.field_70163_u, oldZ + z3);
                this.tickTimer.reset();
                break;
            }
            case "mineplex": {
                if (Phase.mc.field_71439_g.field_70123_F) {
                    this.mineplexClip = true;
                }
                if (!this.mineplexClip) {
                    break;
                }
                this.mineplexTickTimer.update();
                Phase.mc.field_71439_g.field_70122_E = false;
                Phase.mc.field_71439_g.field_70159_w = 0.0;
                Phase.mc.field_71439_g.field_70179_y = 0.0;
                Phase.mc.field_71439_g.field_70181_x = 0.0;
                Phase.mc.field_71439_g.field_70747_aH = 0.0f;
                if (this.mineplexTickTimer.hasTimePassed(3)) {
                    this.mineplexTickTimer.reset();
                    this.mineplexClip = false;
                    break;
                }
                if (this.mineplexTickTimer.hasTimePassed(1)) {
                    final double offset = this.mineplexTickTimer.hasTimePassed(2) ? 1.6 : 0.06;
                    final double direction2 = MovementUtils.getDirection();
                    Phase.mc.field_71439_g.func_70107_b(Phase.mc.field_71439_g.field_70165_t + -Math.sin(direction2) * offset, Phase.mc.field_71439_g.field_70163_u, Phase.mc.field_71439_g.field_70161_v + Math.cos(direction2) * offset);
                    break;
                }
                break;
            }
        }
        this.tickTimer.update();
    }
    
    @EventTarget
    public void onBlockBB(final BlockBBEvent event) {
        if (Phase.mc.field_71439_g != null && BlockUtils.collideBlockIntersects(Phase.mc.field_71439_g.func_174813_aQ(), block -> !(block instanceof BlockAir)) && event.getBoundingBox() != null && event.getBoundingBox().field_72337_e > Phase.mc.field_71439_g.func_174813_aQ().field_72338_b && !this.modeValue.asString().equalsIgnoreCase("Mineplex")) {
            final AxisAlignedBB axisAlignedBB = event.getBoundingBox();
            event.setBoundingBox(new AxisAlignedBB(axisAlignedBB.field_72336_d, Phase.mc.field_71439_g.func_174813_aQ().field_72338_b, axisAlignedBB.field_72334_f, axisAlignedBB.field_72340_a, axisAlignedBB.field_72338_b, axisAlignedBB.field_72339_c));
        }
    }
    
    @EventTarget
    public void onPacket(final PacketEvent event) {
        final Packet packet = event.getPacket();
        if (packet instanceof C03PacketPlayer) {
            final C03PacketPlayer packetPlayer = (C03PacketPlayer)packet;
            if (this.modeValue.asString().equalsIgnoreCase("AAC3.5.0")) {
                final float yaw = (float)MovementUtils.getDirection();
                packetPlayer.field_149479_a -= MathHelper.func_76126_a(yaw) * 1.0E-8;
                packetPlayer.field_149478_c += MathHelper.func_76134_b(yaw) * 1.0E-8;
            }
        }
    }
    
    @EventTarget
    public void onPushOut(final PushOutEvent event) {
        event.setCancelled(true);
    }
    
    @Override
    public String getTag() {
        return this.modeValue.asString();
    }
}
